name: Build daily MLST-AS PMTiles

on:
  schedule:
    - cron: "0 18 * * *"   # daily at 18:00 UTC
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install GDAL
        run: sudo apt-get update && sudo apt-get install -y gdal-bin

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install rio-pmtiles

      - name: Prepare folders
        run: |
          mkdir -p work tiles
          mkdir -p debug
        

      # --- Configure your dataset ---
      - name: Build URL for today
        env:
          TARGET_HHMM: "1100"   # adjust if product is published at a different time
        run: |
          Y=$(date -u +%Y)
          M=$(date -u +%m)
          D=$(date -u +%d)
          TS="${Y}${M}${D}${TARGET_HHMM}"
          echo "STAMP=${TS}" >> $GITHUB_ENV
          echo "NETCDF_URL=https://datalsasaf.lsasvcs.ipma.pt/PRODUCTS/MSG/MLST-AS/NETCDF/${Y}/${M}/${D}/NETCDF4_LSASAF_MSG_MLST-AS_MSG-Disk_${TS}.nc" >> $GITHUB_ENV

      - name: Download NetCDF (auth)
        env:
          LSA_USER: ${{ secrets.LSA_USER }}
          LSA_PASS: ${{ secrets.LSA_PASS }}
          NETCDF_URL: ${{ env.NETCDF_URL }}
        run: |
          echo "Fetching: $NETCDF_URL"
          curl -fL -u "${LSA_USER}:${LSA_PASS}" "$NETCDF_URL" -o work/input.nc

      - name: Inspect subdatasets (for logs)
        run: gdalinfo work/input.nc | head -n 100

      - name: NetCDF -> GeoTIFF (native)
        run: |
          gdal_translate "NETCDF:\"work/input.nc\":MLST-AS" work/raw_native.tif -a_nodata 0 -unscale
      
      - name: Diagnose raw_native.tif
        run: |
          echo "=== raw_native.tif ==="
          gdalinfo -mm -stats work/raw_native.tif | sed -n '1,160p'
          gdal_translate -of PNG -scale -ot Byte work/raw_native.tif debug/raw_native_quicklook.png

      - name: Reproject to EPSG:3857
        run: gdalwarp -t_srs EPSG:3857 -r bilinear -dstalpha work/raw_native.tif work/merc.tif

      - name: Diagnose merc.tif (EPSG:3857)
        run: |
          echo "=== merc.tif ==="
          gdalinfo -mm -stats work/merc.tif | sed -n '1,200p'
          gdal_translate -of PNG -scale -ot Byte work/merc.tif debug/merc_quicklook.png

      - name: Mask values outside 0–60 °C
        run: |
          # Anything <0 or >60 becomes NoData (NaN) → transparent later
          gdal_calc.py -A work/merc.tif --outfile=work/merc_masked.tif --NoDataValue=nan \
            --calc="(A>=0)*(A<=60)*A + (A<0)*nan + (A>60)*nan" --type=Float32
      
      - name: Diagnose merc_masked.tif (after 0–60 °C mask)
        run: |
          echo "=== merc_masked.tif ==="
          gdalinfo -mm -stats work/merc_masked.tif | sed -n '1,200p'
          gdal_translate -of PNG -scale -ot Byte work/merc_masked.tif debug/merc_masked_quicklook.png

      - name: Colorize (0–60 °C ramp)
        run: |
          cat > work/ramp.txt << 'TXT'
          nv 0 0 0 0
          # value(°C)   R   G   B
            0          0   0 255
           10          0  64 255
           20          0 128 255
           30          0 191 191
           40          0 223 127
           50         64 223  64
           60        255   0   0
          TXT
      
          gdaldem color-relief work/merc_masked.tif work/ramp.txt work/color.tif -alpha

      - name: GeoTIFF -> PMTiles
        run: rio pmtiles work/color.tif tiles/raster.pmtiles --zoom-levels 0..6

      - name: Ensure quicklooks exist
        run: |
          test -s debug/raw_native_quicklook.png
          test -s debug/merc_quicklook.png
          test -s debug/merc_masked_quicklook.png
          test -s tiles/raster.pmtiles

      - name: Commit & push if changed
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "build(pmtiles): MLST-AS daily refresh [skip ci]"
          file_pattern: |
            tiles/raster.pmtiles
            debug/*.png

